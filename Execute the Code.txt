
# MBGCNet-MPS: PolSAR Image Classification

This repository contains the implementation of **MBGCNet-MPS**, a hybrid deep learning framework combining CNN and Mini-Batch Graph Convolutional Network (MB-GCN) for PolSAR (Polarimetric Synthetic Aperture Radar) image classification.

---

## How to Run the Code

### 1. Prerequisites

- Python 3.7 or higher
- Required Python packages:
  - `torch`
  - `numpy`
  - `scipy`
  - `matplotlib`
  - `scikit-learn`
  - `seaborn`
  - `tqdm`

You can install all required packages via pip:

```bash
pip install torch numpy scipy matplotlib scikit-learn seaborn tqdm
```

### 2. Data Preparation

Prepare your PolSAR data as spatial patches saved in a `.mat` file. The `.mat` file should contain two variables:

- `patches`: a NumPy array of shape `[num_samples, num_channels, patch_size, patch_size]`
- `labels`: a 1D array containing class labels for each sample

Make sure your data is formatted accordingly before running the code.

### 3. Configure Data Path

In the main Python script (`MBGCNet_MPS.py`), locate the section:

```python
if __name__ == '__main__':
    data_path = 'path/to/your/polsar_patches.mat'
```

Replace `'path/to/your/polsar_patches.mat'` with the actual path to your `.mat` data file.

### 4. Run the Script

Execute the script in your terminal or command prompt:

```bash
python MBGCNet_MPS.py
```

The training process will start, and after each epoch, you will see the training progress and accuracy printed in the console.

### 5. GPU Usage (Optional)

If a CUDA-compatible NVIDIA GPU is available and PyTorch detects it, the code will automatically utilize the GPU for faster training.

---

## Notes

- To train the model on your own data, adjust the data path and ensure the data format matches the expected input.
- You can modify training parameters such as batch size, number of epochs, and learning rate by editing the script.
- For any issues or questions, feel free to contact or open an issue in the repository.
